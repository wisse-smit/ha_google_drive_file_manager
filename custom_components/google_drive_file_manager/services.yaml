upload_media_file:
  name: Upload media file
  description: >
    Upload a local media file to Drive.
    For more common media types, the mime type will be set automatically.
  fields:
    local_file_path:
      name: Local file path
      description: Path to the file on your Home Assistant host.
      required: true
      example: /config/www/video123.mp4
      selector:
        text:
          placeholder: /config/www/video123.mp4
    mime_type:
      name: MIME type
      description: Content type of the file.
      example: video/mp4
      selector:
        text: {}
    remote_file_name:
      name: Remote file name
      description: Filename to use in Drive.
      example: video.mp4
      selector:
        text: {}
    remote_folder_path:
      name: Remote folder path
      description: Drive folder (leave blank for root).
      example: camera/outdoor
      selector:
        text: {}
    append_ymd_path:
      name: Append year/month/day folders to file path
      description: >
        Append the current year/month/day to the remote folder path (if set, if no remote folder path, will be added to root).
        Useful for organizing files by date.
      selector:
        boolean: {}
    save_to_sensor:
      name: Save to sensor
      description: >
        Save the uploaded file information to a sensor entity.
        The sensor will be updated with the fields specified.
      default: false
      selector:
        boolean: {}
    sensor_name:
      name: Sensor name
      description: Name of the sensor to create with the uploaded file info.
      default: Google Drive uploaded file
      example: Google Drive uploaded file
      selector:
        text: {}
    fields:
      name: File fields to return
      description: >
        Comma-separated Drive fields to return in the sensor.
      default: id,name,webContentLink,webViewLink
      example: id,name,webContentLink,webViewLink
      selector:
        text: {}

cleanup_older_files_by_pattern:
  name: Cleanup old Drive files
  description: >
    Delete files matching a pattern older than *N* days.  
    Enable **Preview only** to see which files *would* be deleted.  
  fields:
    pattern:
      name: Filename pattern
      description: Pattern to match Drive file names.
      example: name contains 'backup'
      required: true
      selector:
        text: {}
    days_ago:
      name: Older than (days)
      description: Only delete files last modified more than this many days ago.
      required: true
      selector:
        number:
          min: 0
          step: 1
    preview:
      name: Preview only
      description: Show matching files without deleting them.
      selector:
        boolean: {}
    save_to_sensor:
      name: Save to sensor
      description: >
        Save the deleted files information to a sensor entity.
        The sensor will be updated with the fields specified.
      default: false
      selector:
        boolean: {}
    sensor_name:
      name: Sensor name
      description: Name of the sensor to create with the deleted files info.
      default: Latest deleted files
      example: Latest deleted files
      selector:
        text: {}
    fields:
      name: File fields to return
      description: >
        Comma-separated Drive fields to return in the sensor.
      default: id,name,createdTime
      example: id,name,createdTime
      selector:
        text: {}

list_files_by_pattern:
  name: List files by pattern
  description: >
    Search Drive with a custom query string and return only the fields you specify.
    The matched files will be returned as a sensor entity. 
  fields:
    query:
      name: Query
      description: Drive API query (e.g. name contains 'backup').
      required: true
      example: name contains 'backup'
      selector:
        text: {}
    sensor_name:
      name: Sensor name
      description: Name of the sensor to create with the matched files.
      example: Google Drive files list
      default: Google Drive files list
      selector:
        text: {}
    fields:
      name: File fields to return
      description: "Comma-separated Drive fields (e.g. id,name)."
      default: id,name
      example: id,name
      selector:
        text: {}
    sort_by_recent:
      name: Sort by recency
      description: >
        List the files sorted by recency (newest first).
        If false, results are sorted by name.
      default: true
      selector:
        boolean: {}
    maximum_files:
      name: Maximum files to return
      description: >
        Define the maximum number of files to return.
        Set to 0 to return all matching files.
      default: 0
      selector:
        number:
          min: 0
          step: 1
    